@inherits InputComponent
@namespace Sidea.SemanticUI.Blazor

<div class="@Class()">
    @Left

    <input value="@Value"
           @onchange="this.InputValueChanged"
           type="text"
           placeholder="@Placeholder"
           readonly="@IsReadonly"
           disabled="@IsDisabled" />

    @Right
</div>

@code {
    public SeInput() : base("input")
    {
    }

    [Parameter]
    public string Value { get; set; }

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    [Parameter]
    public string Placeholder { get; set; }

    [Parameter]
    public InputDecorations Decorations { get; set; }

    [Parameter]
    public RenderFragment Left { get; set; }

    [Parameter]
    public RenderFragment Right { get; set; }

    private bool IsReadonly => this.State == EditState.ReadOnly;
    private bool IsDisabled => this.State == EditState.Disabled;

    protected override IEnumerable<string> Classes()
    {
        return base.Classes().Concat(this.ClassesPrivate());
    }

    private void InputValueChanged(ChangeEventArgs e)
    {
        this.Value = e.Value as string;
        this.ValueChanged.InvokeAsync(this.Value);
    }

    private IEnumerable<string> ClassesPrivate()
    {
        yield return this.Decorations.ToClass();
    }
}
